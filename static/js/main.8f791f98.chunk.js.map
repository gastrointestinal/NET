{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","value","target","name","formData","state","setState","handleSelectChange","handlePredictClick","result","isLoading","Promise","race","fetch","headers","Accept","Content-Type","method","body","JSON","stringify","resolve","reject","setTimeout","Error","then","response","json","catch","handleCancelClick","age","size","ext","num","sex","ru","his","grade","stage","surgery","met","react_default","a","createElement","Container_default","className","Form_default","Row","Group","as","Col","Label","Control","type","placeholder","onChange","Row_default","Col_default","id","Button_default","block","variant","disabled","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f791f98.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      formData: {\n        age: '',\n        size: '',\n        ext: '',\n        num: '',\n        sex: '1',\n        race: '1',\n        ru: '1',\n        his: '1',\n        grade: '1',\n        stage: '0',\n        surgery: '0',\n        met: '0',\n      },\n      result: \"\"\n    };\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    var formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData\n    });\n  }\n\n  handleSelectChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    var formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData\n    });\n  }\n\n  handlePredictClick = (event) => {\n    const formData = this.state.formData;\n    this.setState({ result: \"\", isLoading: true });\n/*\n    this.setState({\n          result: JSON.stringify(formData),\n          isLoading: false\n        });\n*/\n\n    Promise.race([\n      fetch('https://flask.ljzxy.com/NET/',\n      //fetch('http://127.0.0.1:5000/NET/',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(formData)\n      }),\n      new Promise(function(resolve,reject){\n        setTimeout(()=> reject(new Error('request timeout')),5000)\n      })])\n      .then(response => response.json())\n      .then(response => {\n        this.setState({\n          result: response.result,\n          isLoading: false\n        });\n      }).catch(()=>{\n        this.setState({\n          result: \"Connection server timed out, please try again.\",\n          isLoading: false\n        });\n    });\n  }\n\n  handleCancelClick = (event) => {\n    this.setState({ result: \"\" });\n  }\n\n\n  render() {\n    const isLoading = this.state.isLoading;\n    const formData = this.state.formData;\n    const result = this.state.result;\n\n    return (\n      <Container>\n        <div>\n          <h1 className=\"title\">Predicting Five-year Survival in R-NETs</h1>\n        </div>\n        <div className=\"content\">\n          <Form>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label className=\"label-head\">General information</Form.Label>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Age (years)</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  placeholder=\"(years)\" \n                  name=\"age\"\n                  value={formData.age}\n                  onChange={this.handleChange} />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Sex</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.sex}\n                  name=\"sex\"\n                  onChange={this.handleSelectChange}>\n                  <option value={2}>Female</option>\n                  <option value={1}>Male</option>\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Race</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.race}\n                  name=\"race\"\n                  onChange={this.handleSelectChange}>\n                  <option value={1}>White</option>\n                  <option value={2}>Black</option>\n                  <option value={3}>Other</option>\n                  <option value={-1}>Unknown</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Rural or Urban</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.ru}\n                  name=\"ru\"\n                  onChange={this.handleSelectChange}>\n                  <option value={1}>Metropolitan(population over 1 million)</option>\n                  <option value={2}>Medium-sized urban(population 250,000-1 million)</option>\n                  <option value={3}>Small urban(population less than 250,000)</option>\n                  <option value={4}>Rural close to urban</option>\n                  <option value={5}>Rural not close to urban</option>\n                  <option value={-1}>Unknown/Not sure</option>\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label className=\"label-head\">Tumor information</Form.Label>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Histologic Type</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.his}\n                  name=\"his\"\n                  onChange={this.handleSelectChange}>\n                  <option value={1}>Carcinoid tumor</option>\n                  <option value={2}>Neuroendicrine carcinoma</option>\n                  <option value={3}>Atypical carcinoid tumor</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Grade</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.grade}\n                  name=\"grade\"\n                  onChange={this.handleSelectChange}>\n                  <option value={1}>Well differentiated</option>\n                  <option value={2}>Moderately differentiated</option>\n                  <option value={3}>Poorly differentiated</option>\n                  <option value={4}>Undifferentiated</option>\n                  <option value={-1}>Unknown</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Summary Stage</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.stage}\n                  name=\"stage\"\n                  onChange={this.handleSelectChange}>\n                  <option value={0}>In situ</option>\n                  <option value={1}>Localized</option>\n                  <option value={2}>Regional</option>\n                  <option value={7}>Distant</option>\n                  <option value={-1}>Unknown</option>\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Surgical Approach</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.surgery}\n                  name=\"surgery\"\n                  onChange={this.handleSelectChange}>\n                  <option value={0}>No surgery</option>\n                  <option value={10}>Local tumor destruction</option>\n                  <option value={20}>Local tumor excision</option>\n                  <option value={30}>Wedge or segmental resection; partial proctectomy</option>\n                  <option value={40}>Pull through WITH sphincter preservation (colo-anal anastomosis)</option>\n                  <option value={50}>Total proctectomy</option>\n                  <option value={60}>Total proctocolectomy</option>\n                  <option value={70}>Proctectomy or proctocolectomy with resection in continuity with other organs; pelvic exenteration</option>\n                  <option value={80}>Proctectomy</option>\n                  <option value={90}>Uncertain surgery</option>\n                  <option value={-1}>Unknown if surgery performed</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Tumor Size (mm)</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  placeholder=\"(mm)\" \n                  name=\"size\"\n                  value={formData.size}\n                  onChange={this.handleChange} />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Metastasis (Bone,Liver,Brain)</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.met}\n                  name=\"met\"\n                  onChange={this.handleSelectChange}>\n                  <option value={1}>Yes</option>\n                  <option value={0}>No</option>\n                  <option value={-1}>Unknown</option>\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Farthest Extension of Tumors</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  placeholder=\"\" \n                  name=\"ext\"\n                  value={formData.ext}\n                  onChange={this.handleChange} />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Tumor Numbers</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  placeholder=\"\" \n                  name=\"num\"\n                  value={formData.num}\n                  onChange={this.handleChange} />\n              </Form.Group>\n            </Form.Row>\n            {result === \"\" ? null :\n              (<Row>\n                <Col className=\"result-container\">\n                  <h5 id=\"result\">{result}</h5>\n                </Col>\n              </Row>)\n            }\n            <Row>\n              <Col>\n                <Button\n                  block\n                  variant=\"success\"\n                  disabled={isLoading}\n                  onClick={!isLoading ? this.handlePredictClick : null}>\n                  { isLoading ? 'Making prediction' : 'Predict' }\n                </Button>\n              </Col>\n              <Col>\n                <Button\n                  block\n                  variant=\"danger\"\n                  disabled={isLoading}\n                  onClick={this.handleCancelClick}>\n                  Reset prediction\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}